name: Multi-Framework AI Test Generator CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  test-cypress:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Cypress
      run: npx cypress install
      
    - name: Run Cypress tests
      run: npm run test:cypress
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        
    - name: Upload Cypress screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: cypress-screenshots-${{ matrix.node-version }}
        path: cypress/screenshots
        
    - name: Upload Cypress videos
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cypress-videos-${{ matrix.node-version }}
        path: cypress/videos

  test-playwright:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      
    - name: Run Playwright tests
      run: npm run test:playwright
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        
    - name: Upload Playwright test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.node-version }}
        path: playwright-report/
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.node-version }}
        path: test-results/

  test-parallel:
    runs-on: ubuntu-latest
    needs: [test-cypress, test-playwright]
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install browsers
      run: |
        npx playwright install --with-deps
        npx cypress install
      
    - name: Run parallel tests
      run: npm run test:parallel
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        
    - name: Generate combined report
      run: |
        node -e "
        const TestRunner = require('./src/utils/testRunner');
        const runner = new TestRunner();
        runner.generateCombinedReport().then(() => console.log('Report generated'));
        "
      
    - name: Upload combined report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: combined-test-report
        path: test-results/combined-report.json